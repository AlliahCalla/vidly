[{"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\movies.jsx":"1","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\utils\\paginate.js":"2","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\index.js":"3","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\common\\pagination.jsx":"4","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\services\\fakeGenreService.js":"5","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\common\\like.jsx":"6","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\services\\fakeMovieService.js":"7","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\common\\listGroup.jsx":"8"},{"size":3591,"mtime":1612488951469,"results":"9","hashOfConfig":"10"},{"size":197,"mtime":1612483778272,"results":"11","hashOfConfig":"10"},{"size":588,"mtime":1612057829957,"results":"12","hashOfConfig":"10"},{"size":1004,"mtime":1612486189941,"results":"13","hashOfConfig":"10"},{"size":258,"mtime":1612053658708,"results":"14","hashOfConfig":"10"},{"size":300,"mtime":1612235402862,"results":"15","hashOfConfig":"10"},{"size":2497,"mtime":1612234223393,"results":"16","hashOfConfig":"10"},{"size":666,"mtime":1612488364121,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"d3d7we",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\movies.jsx",["36"],"import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Like from \"./common/like\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    //deleteMovie(movie._id);\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n    const movies = paginate(filtered, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <p>Showing {filtered.length} movies in the database</p>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Genre</th>\r\n                <th scope=\"col\">Stock</th>\r\n                <th scope=\"col\">Rate</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {movies.map((movie) => (\r\n                <tr key={movie._id}>\r\n                  <td scope=\"row\">{movie.title}</td>\r\n                  <td>{movie.genre.name}</td>\r\n                  <td>{movie.numberInStock}</td>\r\n                  <td>{movie.dailyRentalRate}</td>\r\n                  <td>\r\n                    <Like\r\n                      liked={movie.liked}\r\n                      onClick={() => this.handleLike(movie)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => this.handleDelete(movie)}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsCount={filtered.length}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\utils\\paginate.js",[],"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\index.js",[],"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\common\\pagination.jsx",["37"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  console.log(currentPage);\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\services\\fakeGenreService.js",[],"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\common\\like.jsx",["38"],"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\services\\fakeMovieService.js",[],"C:\\Users\\Allia\\Documents\\1 React\\vidly\\src\\components\\common\\listGroup.jsx",[],{"ruleId":"39","severity":1,"message":"40","line":86,"column":23,"nodeType":"41","endLine":86,"endColumn":34},{"ruleId":"42","severity":1,"message":"43","line":21,"column":13,"nodeType":"44","endLine":21,"endColumn":73},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar"]